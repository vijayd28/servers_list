{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/servers/servers.component.ts","./src/app/servers/servers.component.html","./src/app/shared/services/api.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: 'http://devon-api.vijay:8088/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'devon';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatTableModule } from \"@angular/material/table\";\nimport { ServersComponent } from './servers/servers.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldControl, MatFormFieldModule} from \"@angular/material/form-field\";\nimport {ApiService} from \"./shared/services/api.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n      MatTableModule,\n      MatFormFieldModule,\n      HttpClientModule,\n      MatSelectModule,\n      FormsModule\n  ],\n  providers: [ ApiService ],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","\nimport { AfterViewInit, Component } from '@angular/core';\nimport { ApiService } from \"../shared/services/api.service\";\nimport { ServersList } from \"./interfaces/servers.interfaces\";\n\n\n@Component({\n  selector: 'servers',\n  styleUrls: ['servers.component.scss'],\n  templateUrl: 'servers.component.html'\n})\nexport class ServersComponent implements AfterViewInit {\n  displayedColumns: string[] = ['model_name', 'ram_size', 'ram_type', 'hdd_type', 'hdd_size', 'location', 'price'];\n  isLoadingResults = false;\n  data: ServersList[] = [];\n  ram_type: any;\n  ram_size: any;\n  hdd_type: any;\n  hdd_size: any;\n  ram_types: any = [  {'id': 'None', 'value': ''}, {'id':'DDR3', 'value': 'DDR3'}, {'id':'DDR4', 'value': 'DDR4'}];\n  hdd_types: any = [  {'id': 'None', 'value': ''}, {'id':'SAS', 'value': 'SAS'}, {'id':'SATA', 'value': 'SATA'}, {'id':'SSD', 'value': 'SSD'}];\n  hdd_sizes:any = [\n    {'id': 'None', 'value': ''},\n    {'id':'0', 'value': 'O'},\n    {'id':'250GB', 'value': '250GB'},\n    {'id':'500GB', 'value': '500GB'},\n    {'id':'1TB', 'value': '1TB'},\n    {'id':'2TB', 'value': '2TB'},\n    {'id':'3TB', 'value': '3TB'},\n    {'id':'4TB', 'value': '4TB'},\n    {'id':'8TB', 'value': '8TB'},\n    {'id':'12TB', 'value': '12TB'},\n    {'id':'24TB', 'value': '24TB'},\n    {'id':'48TB', 'value': '48TB'},\n    {'id':'78TB', 'value': '78TB'},\n  ];\n\n  ram_sizes:any = [\n    {'id': 'None', 'value': ''},\n    {'id':'2GB', 'value': '2GB'},\n    {'id':'4GB', 'value': '4GB'},\n    {'id':'8GB', 'value': '8GB'},\n    {'id':'12GB', 'value': '12GB'},\n    {'id':'16GB', 'value': '16GB'},\n    {'id':'24GB', 'value': '24GB'},\n    {'id':'32GB', 'value': '32GB'},\n    {'id':'48GB', 'value': '48GB'},\n    {'id':'64GB', 'value': '64GB'},\n    {'id':'96GB', 'value': '96GB'},\n  ];\n\n  constructor(private apiService: ApiService) {}\n\n  ngAfterViewInit() {\n     this.getServersList();\n  }\n\n  getServersList(params = {}) {\n    this.apiService.get('servers/list', params)\n        .subscribe((res) => {\n          this.data = res.data;\n        });\n  }\n\n  applyFilter(obj) {\n    this.getServersList(obj);\n  }\n}\n\n\n\n\n","<div class=\"container\">\n    <div class=\"loading-shade\"\n         *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n\n\n    <div class=\"table-container\">\n        <div class=\"title\"> Servers list</div>\n        <div class=\"filter\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Ram Type</mat-label>\n                <mat-select [(ngModel)]=\"ram_type\" (selectionChange)=\"applyFilter({'ram_type': ram_type})\">\n                    <mat-option *ngFor=\"let ram of ram_types\" [value]=\"ram.value\">\n                        {{ram.id}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Ram Size</mat-label>\n                <mat-select [(ngModel)]=\"ram_size\" (selectionChange)=\"applyFilter({'ram_size':ram_size})\">\n                    <mat-option *ngFor=\"let ram of ram_sizes\" [value]=\"ram.value\">\n                        {{ram.id}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Hdd Type</mat-label>\n                <mat-select [(ngModel)]=\"hdd_type\" (selectionChange)=\"applyFilter({'hdd_type':hdd_type})\">\n                    <mat-option *ngFor=\"let hdd of hdd_types\" [value]=\"hdd.value\">\n                        {{hdd.id}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Hdd Size</mat-label>\n                <mat-select [(ngModel)]=\"hdd_size\" (selectionChange)=\"applyFilter({'hdd_size':hdd_size})\">\n                    <mat-option *ngFor=\"let hdd of hdd_size\" [value]=\"hdd.value\">\n                        {{hdd.id}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8 table\">\n\n            <ng-container matColumnDef=\"model_name\">\n                <th mat-header-cell *matHeaderCellDef> Model Name. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.model}} </td>\n            </ng-container>\n\n            <!-- RAM SIZE Column -->\n            <ng-container matColumnDef=\"ram_size\">\n                <th mat-header-cell *matHeaderCellDef> RAM Size </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.ram_size}} </td>\n            </ng-container>\n\n            <!-- RAM TYPE Column -->\n            <ng-container matColumnDef=\"ram_type\">\n                <th mat-header-cell *matHeaderCellDef> RAM Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.ram_type}} </td>\n            </ng-container>\n\n            <!-- HDD TYPE Column -->\n            <ng-container matColumnDef=\"hdd_type\">\n                <th mat-header-cell *matHeaderCellDef> HDD Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.hdd_type}} </td>\n            </ng-container>\n\n            <!-- HDD SIZE Column -->\n            <ng-container matColumnDef=\"hdd_size\">\n                <th mat-header-cell *matHeaderCellDef> HDD Size </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.hdd_size}} </td>\n            </ng-container>\n\n            <!-- Location Column -->\n            <ng-container matColumnDef=\"location\">\n                <th mat-header-cell *matHeaderCellDef> Location </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.location}} </td>\n            </ng-container>\n\n            <!-- Price Column -->\n            <ng-container matColumnDef=\"price\">\n                <th mat-header-cell *matHeaderCellDef> Price </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n\n</div>\n\n\n\n","import { startsWith as $_startsWith, get as $_get, defaultTo as $_defaultTo} from 'lodash-es';\n\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpEvent, HttpResponse} from '@angular/common/http';\n\n\nimport { Observable, throwError} from 'rxjs';\nimport { GlobalService } from './global.service';\nimport { catchError } from 'rxjs/operators';\nimport { JsendResponse, Errors } from '../interfaces';\n\n/**\n * Api Service\n *\n * @export\n * @class ApiService\n */\n@Injectable()\n\nexport class ApiService {\n\n    /**\n     * Api Service Constructor\n     *\n     * @param http {HttpClient}\n     */\n    public constructor(\n        private http: HttpClient\n    ) {}\n\n    /**\n     * Format errors and rethrow\n     *\n     * @param error\n     * @return {any}\n     */\n    private static formatErrors(error: HttpErrorResponse) {\n        const errorData: JsendResponse = $_get(error, 'error', {});\n        const errors: Errors = {\n            error: $_defaultTo(\n                $_get(errorData, 'message'),\n                'Something went wrong. Please check your internet connection and reload the app.'\n            ),\n            formError: $_get(errorData, ['data', 'validation'], null),\n            status: error.status,\n        };\n\n        return throwError(errors);\n    }\n\n    /**\n     * If API Url not is prefixed, add it\n     *\n     * @private\n     * @param {string} url\n     * @returns {string}\n     *\n     * @memberOf ApiService\n     */\n    private static prepareUrl(url: string): string {\n        //const apiUrl: string = GlobalService.getEnv('api.base_url');\n        const apiUrl: string = 'http://api.vijayd.com/v1/';\n\n        return ($_startsWith(url, 'http')) ? url : apiUrl + url;\n    }\n\n\n    /**\n     * Interface for HTTP Get\n     *\n     * @param {string} url\n     * @param {URLSearchParams} params\n     * @returns {Observable<any>}\n     *\n     * @memberOf ApiService\n     */\n    public get(url: string, params: Object = {}): Observable<any> {\n        return this.request('GET', url, { params });\n    }\n\n    /**\n     * Interface for HTTP Post\n     *\n     * @param {string} url\n     * @param {Object} [body]\n     * @returns {Observable<any>}\n     *\n     * @memberOf ApiService\n     */\n    public post(url: string, body?: Object): Observable<HttpEvent<JsendResponse>> {\n\n        return this.request('POST', url, { body });\n    }\n\n    /**\n     * Interface for HTTP Put\n     *\n     * @param {string} url\n     * @param {Object} [body]\n     * @returns {Observable<any>}\n     *\n     * @memberOf ApiService\n     */\n    public put(url: string, body?: Object): Observable<HttpEvent<JsendResponse>> {\n\n        return this.request('PUT', url, { body });\n    }\n\n    /**\n     * Interface for HTTP Patch\n     *\n     * @param {string} url\n     * @param {Object} [body]\n     * @returns {Observable<any>}}\n     *\n     * @memberOf ApiService\n     */\n    public patch(url: string, body?: Object): Observable<HttpEvent<JsendResponse>> {\n\n        return this.request('PATCH', url, { body });\n    }\n\n    /**\n     * Interface for HTTP Delete\n     *\n     * @param {string} url\n     * @param {Object} params\n     * @returns {Observable<any>}\n     *\n     * @memberOf ApiService\n     */\n    public delete(url: string, params?: Object): Observable<HttpEvent<JsendResponse>> {\n\n        return this.request('DELETE', url, { params });\n    }\n\n    /**\n     * @private\n     * @param {string} method\n     * @param {string} url\n     * @param options\n     * @returns {Observable<any>}\n     *\n     * @memberOf ApiService\n     */\n    private request(method: string, url: string, options): Observable<any> {\n        if (options.body) {\n            options.body = JSON.stringify(options.body);\n        }\n\n        return this\n            .http\n            .request<JsendResponse>(\n                method,\n                ApiService.prepareUrl(url),\n                options\n            )\n            .pipe(\n                catchError(error => ApiService.formatErrors(error))\n            );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ServersComponent } from \"./servers/servers.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServersComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}